// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// logCLnormal
double logCLnormal(arma::vec beta, arma::mat cov, arma::mat block_y, arma::mat block_x, double m, double n);
RcppExport SEXP _DIMM_logCLnormal(SEXP betaSEXP, SEXP covSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(logCLnormal(beta, cov, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}
// logCLnormal_par
double logCLnormal_par(NumericVector beta, NumericMatrix cov, NumericMatrix block_y, NumericMatrix block_x, double m, double n);
RcppExport SEXP _DIMM_logCLnormal_par(SEXP betaSEXP, SEXP covSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cov(covSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(logCLnormal_par(beta, cov, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}
// eenormalmean
List eenormalmean(arma::vec beta, arma::mat cov, arma::mat block_y, arma::mat block_x, double m, double n);
RcppExport SEXP _DIMM_eenormalmean(SEXP betaSEXP, SEXP covSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eenormalmean(beta, cov, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}
// eenormalmean_par
List eenormalmean_par(NumericVector beta, NumericMatrix cov, NumericMatrix block_y, NumericMatrix block_x, double m, double n);
RcppExport SEXP _DIMM_eenormalmean_par(SEXP betaSEXP, SEXP covSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cov(covSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eenormalmean_par(beta, cov, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}
// eenormalderivmean
List eenormalderivmean(arma::mat cov, arma::mat block_y, arma::mat block_x, double m, double n);
RcppExport SEXP _DIMM_eenormalderivmean(SEXP covSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eenormalderivmean(cov, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}
// eenormalderivmean_par
List eenormalderivmean_par(NumericMatrix cov, NumericMatrix block_y, NumericMatrix block_x, double m, double n);
RcppExport SEXP _DIMM_eenormalderivmean_par(SEXP covSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type cov(covSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eenormalderivmean_par(cov, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}
// eenormalCSvar
List eenormalCSvar(arma::vec beta, double sigma, double rho, arma::mat block_y, arma::mat block_x, double m, double n);
RcppExport SEXP _DIMM_eenormalCSvar(SEXP betaSEXP, SEXP sigmaSEXP, SEXP rhoSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eenormalCSvar(beta, sigma, rho, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}
// eenormalCSvar_par
List eenormalCSvar_par(NumericVector beta, double sigma, double rho, NumericMatrix block_y, NumericMatrix block_x, double m, double n);
RcppExport SEXP _DIMM_eenormalCSvar_par(SEXP betaSEXP, SEXP sigmaSEXP, SEXP rhoSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eenormalCSvar_par(beta, sigma, rho, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}
// eenormalAR1var
List eenormalAR1var(arma::vec beta, double sigma, double rho, arma::mat block_y, arma::mat block_x, double m, double n);
RcppExport SEXP _DIMM_eenormalAR1var(SEXP betaSEXP, SEXP sigmaSEXP, SEXP rhoSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eenormalAR1var(beta, sigma, rho, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}
// eenormalAR1var_par
List eenormalAR1var_par(NumericVector beta, double sigma, double rho, NumericMatrix block_y, NumericMatrix block_x, double m, double n);
RcppExport SEXP _DIMM_eenormalAR1var_par(SEXP betaSEXP, SEXP sigmaSEXP, SEXP rhoSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eenormalAR1var_par(beta, sigma, rho, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}
// eenormalindvar
List eenormalindvar(arma::vec beta, double sigma, arma::mat block_y, arma::mat block_x, double m, double n);
RcppExport SEXP _DIMM_eenormalindvar(SEXP betaSEXP, SEXP sigmaSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eenormalindvar(beta, sigma, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}
// eenormalindvar_par
List eenormalindvar_par(NumericVector beta, double sigma, NumericMatrix block_y, NumericMatrix block_x, double m, double n);
RcppExport SEXP _DIMM_eenormalindvar_par(SEXP betaSEXP, SEXP sigmaSEXP, SEXP block_ySEXP, SEXP block_xSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_y(block_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type block_x(block_xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eenormalindvar_par(beta, sigma, block_y, block_x, m, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DIMM_logCLnormal", (DL_FUNC) &_DIMM_logCLnormal, 6},
    {"_DIMM_logCLnormal_par", (DL_FUNC) &_DIMM_logCLnormal_par, 6},
    {"_DIMM_eenormalmean", (DL_FUNC) &_DIMM_eenormalmean, 6},
    {"_DIMM_eenormalmean_par", (DL_FUNC) &_DIMM_eenormalmean_par, 6},
    {"_DIMM_eenormalderivmean", (DL_FUNC) &_DIMM_eenormalderivmean, 5},
    {"_DIMM_eenormalderivmean_par", (DL_FUNC) &_DIMM_eenormalderivmean_par, 5},
    {"_DIMM_eenormalCSvar", (DL_FUNC) &_DIMM_eenormalCSvar, 7},
    {"_DIMM_eenormalCSvar_par", (DL_FUNC) &_DIMM_eenormalCSvar_par, 7},
    {"_DIMM_eenormalAR1var", (DL_FUNC) &_DIMM_eenormalAR1var, 7},
    {"_DIMM_eenormalAR1var_par", (DL_FUNC) &_DIMM_eenormalAR1var_par, 7},
    {"_DIMM_eenormalindvar", (DL_FUNC) &_DIMM_eenormalindvar, 6},
    {"_DIMM_eenormalindvar_par", (DL_FUNC) &_DIMM_eenormalindvar_par, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_DIMM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
